// Definition des browser-Moduls
var browser = function () {
    "use strict";

    var t = {
        // Eigenschaften für Browserinformationen
        name: null,
        version: null,
        os: null,
        osVersion: null,
        touch: null,
        mobile: null,
        _canUse: null,

        // Methode zur Überprüfung der Browserfähigkeiten
        canUse: function (feature) {
            t._canUse || (t._canUse = document.createElement("div"));
            var style = t._canUse.style;
            var featureWithPrefix = feature.charAt(0).toUpperCase() + feature.slice(1);

            return feature in style || "Moz" + featureWithPrefix in style || "Webkit" + featureWithPrefix in style ||
                "O" + featureWithPrefix in style || "ms" + featureWithPrefix in style;
        },

        // Initialisierung des Moduls
        init: function () {
            var userAgent = navigator.userAgent;
            var name = "other";
            var version = 0;

            // Überprüfung des Browsers und seiner Version
            var browsers = [
                ["firefox", /Firefox\/([0-9\.]+)/],
                ["bb", /BlackBerry.+Version\/([0-9\.]+)/],
                ["bb", /BB[0-9]+.+Version\/([0-9\.]+)/],
                ["opera", /OPR\/([0-9\.]+)/],
                ["opera", /Opera\/([0-9\.]+)/],
                ["edge", /Edge\/([0-9\.]+)/],
                ["safari", /Version\/([0-9\.]+).+Safari/],
                ["chrome", /Chrome\/([0-9\.]+)/],
                ["ie", /MSIE ([0-9]+)/],
                ["ie", /Trident\/.+rv:([0-9]+)/]
            ];

            for (var i = 0; i < browsers.length; i++) {
                if (userAgent.match(browsers[i][1])) {
                    name = browsers[i][0];
                    version = parseFloat(RegExp.$1);
                    break;
                }
            }

            t.name = name;
            t.version = version;

            // Überprüfung des Betriebssystems und seiner Version
            name = "other";
            var osBrowsers = [
                ["ios", /([0-9_]+) like Mac OS X/, function (match) { return match.replace("_", ".").replace("_", "."); }],
                ["ios", /CPU like Mac OS X/, function (match) { return 0; }],
                ["wp", /Windows Phone ([0-9\.]+)/, null],
                ["android", /Android ([0-9\.]+)/, null],
                ["mac", /Macintosh.+Mac OS X ([0-9_]+)/, function (match) { return match.replace("_", ".").replace("_", "."); }],
                ["windows", /Windows NT ([0-9\.]+)/, null],
                ["bb", /BlackBerry.+Version\/([0-9\.]+)/, null],
                ["bb", /BB[0-9]+.+Version\/([0-9\.]+)/, null],
                ["linux", /Linux/, null],
                ["bsd", /BSD/, null],
                ["unix", /X11/, null]
            ];

            for (var j = 0; j < osBrowsers.length; j++) {
                if (userAgent.match(osBrowsers[j][1])) {
                    name = osBrowsers[j][0];
                    version = parseFloat(osBrowsers[j][2] ? osBrowsers[j][2](RegExp.$1) : RegExp.$1);
                    break;
                }
            }

            // Spezielle Behandlung für Mac, wenn er als iOS erkannt wird
            if (name === "mac" && "ontouchstart" in window &&
                (screen.width === 1024 && screen.height === 1366 ||
                    screen.width === 834 && screen.height === 1112 ||
                    screen.width === 810 && screen.height === 1080 ||
                    screen.width === 768 && screen.height === 1024)) {
                name = "ios";
            }

            t.os = name;
            t.osVersion = version;
            t.touch = "wp" === t.os ? 0 < navigator.msMaxTouchPoints : !!("ontouchstart" in window);
            t.mobile = ["wp", "android", "ios", "bb"].indexOf(t.os) !== -1;
        }
    };

    // Initialisierung des Objekts beim Laden der Seite
    t.init();

    return t;
}();

// Unterstützung für verschiedene Umgebungen (AMD, CommonJS, global)
!function (e, n) {
    "function" == typeof define && define.amd ? define([], n) :
        "object" == typeof exports ? module.exports = n() :
            e.browser = n();
}(this, function () {
    return browser;
});
